<DataListSpec 
	xmlns="bb_appfx_datalist"
	xmlns:c="bb_appfx_commontypes" 
	ID="f6fd1d37-4e2f-4cc4-9cf0-c13926d0ee40" 
	Name="Sustained Giving Revenue Data List"
	Description="A data list showing sustained giving revenue records." 
	Author="Blackbaud Product Development"
	c:SecurityUIFolder="Sustained Giving Dashboard"
  MartKey="BBDW"
	>

	<!-- define the SP that returns the data for the datalist -->
	<SPDataList SPName="USR_USP_DATALIST_SUSTAINEDGIVINGREVENUE" SPSchema="BBDW">
		<c:CreateProcedureSQL>
			<![CDATA[
create procedure BBDW.USR_USP_DATALIST_SUSTAINEDGIVINGREVENUE
(
  @STARTDATE datetime = null, 
  @ENDDATE datetime = null
)
as
	set nocount on;

declare @DATERANGE int
set @DATERANGE = datediff(d,@STARTDATE, @ENDDATE);

if @DATERANGE > 700 or @DATERANGE is null

--Do Year
  begin

    select
      d.[CALENDARYEAR] as [DATEFIELD],
      sum(rgi.[RECURRINGGIFTINSTALLMENTPAYMENTAMOUNT]) as [AMOUNT]
    from BBDW.[FACT_RECURRINGGIFTINSTALLMENTPAYMENT] rgi
    inner join BBDW.[FACT_FINANCIALTRANSACTION] ft on rgi.[FINANCIALTRANSACTIONFACTID] = ft.[FINANCIALTRANSACTIONFACTID]
    inner join BBDW.[DIM_DATE] d on ft.[FINANCIALTRANSACTIONDATEDIMID] = d.[DATEDIMID]
    and (@STARTDATE is null or ft.[FINANCIALTRANSACTIONDATE] > @STARTDATE)
    and (@ENDDATE is null or ft.[FINANCIALTRANSACTIONDATE] < @ENDDATE)
    group by d.[CALENDARYEAR]
    order by d.[CALENDARYEAR];

  end

if @DATERANGE between 200 and 700

--Do Month
  begin

    select
      d.[CALENDARMONTHYEARNAME] as [DATEFIELD],
      sum(rgi.[RECURRINGGIFTINSTALLMENTPAYMENTAMOUNT]) as [AMOUNT]
    from BBDW.[FACT_RECURRINGGIFTINSTALLMENTPAYMENT] rgi
    inner join BBDW.[FACT_FINANCIALTRANSACTION] ft on rgi.[FINANCIALTRANSACTIONFACTID] = ft.[FINANCIALTRANSACTIONFACTID]
    inner join BBDW.[DIM_DATE] d on ft.[FINANCIALTRANSACTIONDATEDIMID] = d.[DATEDIMID]
    and (@STARTDATE is null or ft.[FINANCIALTRANSACTIONDATE] > @STARTDATE)
    and (@ENDDATE is null or ft.[FINANCIALTRANSACTIONDATE] < @ENDDATE)
    group by d.[CALENDARMONTHYEARNAME], d.[CALENDARYEARMONTH]
    order by d.[CALENDARYEARMONTH];

  end


if @DATERANGE between 32 and 200

--Do Week
  begin

    select
      d.[CALENDARWEEKYEARNAME] as [DATEFIELD],
      sum(rgi.[RECURRINGGIFTINSTALLMENTPAYMENTAMOUNT]) as [AMOUNT]
    from BBDW.[FACT_RECURRINGGIFTINSTALLMENTPAYMENT] rgi
    inner join BBDW.[FACT_FINANCIALTRANSACTION] ft on rgi.[FINANCIALTRANSACTIONFACTID] = ft.[FINANCIALTRANSACTIONFACTID]
    inner join BBDW.[DIM_DATE] d on ft.[FINANCIALTRANSACTIONDATEDIMID] = d.[DATEDIMID]
    and (@STARTDATE is null or ft.[FINANCIALTRANSACTIONDATE] > @STARTDATE)
    and (@ENDDATE is null or ft.[FINANCIALTRANSACTIONDATE] < @ENDDATE)
    group by d.[CALENDARYEAR], d.[CALENDARWEEK], d.[CALENDARWEEKYEARNAME]
    order by d.[CALENDARYEAR], d.[CALENDARWEEK];

  end

if @DATERANGE < 32

--Do Day
  begin

    select
      d.[ACTUALDATESTRINGMDY] as [DATEFIELD],
      sum(rgi.[RECURRINGGIFTINSTALLMENTPAYMENTAMOUNT]) as [AMOUNT]
    from BBDW.[FACT_RECURRINGGIFTINSTALLMENTPAYMENT] rgi
    inner join BBDW.[FACT_FINANCIALTRANSACTION] ft on rgi.[FINANCIALTRANSACTIONFACTID] = ft.[FINANCIALTRANSACTIONFACTID]
    inner join BBDW.[DIM_DATE] d on ft.[FINANCIALTRANSACTIONDATEDIMID] = d.[DATEDIMID]
    and (@STARTDATE is null or ft.[FINANCIALTRANSACTIONDATE] > @STARTDATE)
    and (@ENDDATE is null or ft.[FINANCIALTRANSACTIONDATE] < @ENDDATE)
    group by d.[ACTUALDATESTRINGMDY], d.[ACTUALDATE]
    order by d.[ACTUALDATE];

  end
			]]>
		</c:CreateProcedureSQL>
	</SPDataList>

  <Parameters>
    <c:FormMetaData>
      <c:FormFields>
        <c:FormField FieldID="STARTDATE" Caption="Start date" DataType="Date"/>
        <c:FormField FieldID="ENDDATE" Caption="End date" DataType="Date"/>
      </c:FormFields>
    </c:FormMetaData>
  </Parameters>

  <Output>
    <OutputFields>
      <OutputField FieldID="DATEFIELD" Caption="Date field" DataType="String" />
      <OutputField FieldID="AMOUNT" Caption="Total Missed Payments" DataType="Money" />
    </OutputFields>
  </Output>

</DataListSpec>